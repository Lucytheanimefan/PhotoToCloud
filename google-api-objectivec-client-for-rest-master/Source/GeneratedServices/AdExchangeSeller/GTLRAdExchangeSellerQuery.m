// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Ad Exchange Seller API (adexchangeseller/v2.0)
// Description:
//   Accesses the inventory of Ad Exchange seller users and generates reports.
// Documentation:
//   https://developers.google.com/ad-exchange/seller-rest/

#import "GTLRAdExchangeSellerQuery.h"

#import "GTLRAdExchangeSellerObjects.h"

@implementation GTLRAdExchangeSellerQuery

@dynamic fields;

@end

@implementation GTLRAdExchangeSellerQuery_AccountsAdclientsList

@dynamic accountId, maxResults, pageToken;

+ (instancetype)queryWithAccountId:(NSString *)accountId {
  NSArray *pathParams = @[ @"accountId" ];
  NSString *pathURITemplate = @"accounts/{accountId}/adclients";
  GTLRAdExchangeSellerQuery_AccountsAdclientsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_AdClients class];
  query.loggingName = @"adexchangeseller.accounts.adclients.list";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsAlertsList

@dynamic accountId, locale;

+ (instancetype)queryWithAccountId:(NSString *)accountId {
  NSArray *pathParams = @[ @"accountId" ];
  NSString *pathURITemplate = @"accounts/{accountId}/alerts";
  GTLRAdExchangeSellerQuery_AccountsAlertsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_Alerts class];
  query.loggingName = @"adexchangeseller.accounts.alerts.list";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsCustomchannelsGet

@dynamic accountId, adClientId, customChannelId;

+ (instancetype)queryWithAccountId:(NSString *)accountId
                        adClientId:(NSString *)adClientId
                   customChannelId:(NSString *)customChannelId {
  NSArray *pathParams = @[
    @"accountId", @"adClientId", @"customChannelId"
  ];
  NSString *pathURITemplate = @"accounts/{accountId}/adclients/{adClientId}/customchannels/{customChannelId}";
  GTLRAdExchangeSellerQuery_AccountsCustomchannelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.adClientId = adClientId;
  query.customChannelId = customChannelId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_CustomChannel class];
  query.loggingName = @"adexchangeseller.accounts.customchannels.get";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsCustomchannelsList

@dynamic accountId, adClientId, maxResults, pageToken;

+ (instancetype)queryWithAccountId:(NSString *)accountId
                        adClientId:(NSString *)adClientId {
  NSArray *pathParams = @[
    @"accountId", @"adClientId"
  ];
  NSString *pathURITemplate = @"accounts/{accountId}/adclients/{adClientId}/customchannels";
  GTLRAdExchangeSellerQuery_AccountsCustomchannelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.adClientId = adClientId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_CustomChannels class];
  query.loggingName = @"adexchangeseller.accounts.customchannels.list";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsGet

@dynamic accountId;

+ (instancetype)queryWithAccountId:(NSString *)accountId {
  NSArray *pathParams = @[ @"accountId" ];
  NSString *pathURITemplate = @"accounts/{accountId}";
  GTLRAdExchangeSellerQuery_AccountsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_Account class];
  query.loggingName = @"adexchangeseller.accounts.get";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsList

@dynamic maxResults, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"accounts";
  GTLRAdExchangeSellerQuery_AccountsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRAdExchangeSeller_Accounts class];
  query.loggingName = @"adexchangeseller.accounts.list";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsMetadataDimensionsList

@dynamic accountId;

+ (instancetype)queryWithAccountId:(NSString *)accountId {
  NSArray *pathParams = @[ @"accountId" ];
  NSString *pathURITemplate = @"accounts/{accountId}/metadata/dimensions";
  GTLRAdExchangeSellerQuery_AccountsMetadataDimensionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_Metadata class];
  query.loggingName = @"adexchangeseller.accounts.metadata.dimensions.list";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsMetadataMetricsList

@dynamic accountId;

+ (instancetype)queryWithAccountId:(NSString *)accountId {
  NSArray *pathParams = @[ @"accountId" ];
  NSString *pathURITemplate = @"accounts/{accountId}/metadata/metrics";
  GTLRAdExchangeSellerQuery_AccountsMetadataMetricsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_Metadata class];
  query.loggingName = @"adexchangeseller.accounts.metadata.metrics.list";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsPreferreddealsGet

@dynamic accountId, dealId;

+ (instancetype)queryWithAccountId:(NSString *)accountId
                            dealId:(NSString *)dealId {
  NSArray *pathParams = @[
    @"accountId", @"dealId"
  ];
  NSString *pathURITemplate = @"accounts/{accountId}/preferreddeals/{dealId}";
  GTLRAdExchangeSellerQuery_AccountsPreferreddealsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.dealId = dealId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_PreferredDeal class];
  query.loggingName = @"adexchangeseller.accounts.preferreddeals.get";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsPreferreddealsList

@dynamic accountId;

+ (instancetype)queryWithAccountId:(NSString *)accountId {
  NSArray *pathParams = @[ @"accountId" ];
  NSString *pathURITemplate = @"accounts/{accountId}/preferreddeals";
  GTLRAdExchangeSellerQuery_AccountsPreferreddealsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_PreferredDeals class];
  query.loggingName = @"adexchangeseller.accounts.preferreddeals.list";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsReportsGenerate

@dynamic accountId, dimension, endDate, filter, locale, maxResults, metric,
         sort, startDate, startIndex;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dimension" : [NSString class],
    @"filter" : [NSString class],
    @"metric" : [NSString class],
    @"sort" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithAccountId:(NSString *)accountId
                         startDate:(NSString *)startDate
                           endDate:(NSString *)endDate {
  NSArray *pathParams = @[ @"accountId" ];
  NSString *pathURITemplate = @"accounts/{accountId}/reports";
  GTLRAdExchangeSellerQuery_AccountsReportsGenerate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.startDate = startDate;
  query.endDate = endDate;
  query.expectedObjectClass = [GTLRAdExchangeSeller_Report class];
  query.loggingName = @"adexchangeseller.accounts.reports.generate";
  return query;
}

+ (instancetype)queryForMediaWithAccountId:(NSString *)accountId
                                 startDate:(NSString *)startDate
                                   endDate:(NSString *)endDate {
  GTLRAdExchangeSellerQuery_AccountsReportsGenerate *query =
    [self queryWithAccountId:accountId
                   startDate:startDate
                     endDate:endDate];
  query.downloadAsDataObjectType = @"media";
  query.loggingName = @"Download adexchangeseller.accounts.reports.generate";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsReportsSavedGenerate

@dynamic accountId, locale, maxResults, savedReportId, startIndex;

+ (instancetype)queryWithAccountId:(NSString *)accountId
                     savedReportId:(NSString *)savedReportId {
  NSArray *pathParams = @[
    @"accountId", @"savedReportId"
  ];
  NSString *pathURITemplate = @"accounts/{accountId}/reports/{savedReportId}";
  GTLRAdExchangeSellerQuery_AccountsReportsSavedGenerate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.savedReportId = savedReportId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_Report class];
  query.loggingName = @"adexchangeseller.accounts.reports.saved.generate";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsReportsSavedList

@dynamic accountId, maxResults, pageToken;

+ (instancetype)queryWithAccountId:(NSString *)accountId {
  NSArray *pathParams = @[ @"accountId" ];
  NSString *pathURITemplate = @"accounts/{accountId}/reports/saved";
  GTLRAdExchangeSellerQuery_AccountsReportsSavedList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_SavedReports class];
  query.loggingName = @"adexchangeseller.accounts.reports.saved.list";
  return query;
}

@end

@implementation GTLRAdExchangeSellerQuery_AccountsUrlchannelsList

@dynamic accountId, adClientId, maxResults, pageToken;

+ (instancetype)queryWithAccountId:(NSString *)accountId
                        adClientId:(NSString *)adClientId {
  NSArray *pathParams = @[
    @"accountId", @"adClientId"
  ];
  NSString *pathURITemplate = @"accounts/{accountId}/adclients/{adClientId}/urlchannels";
  GTLRAdExchangeSellerQuery_AccountsUrlchannelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.accountId = accountId;
  query.adClientId = adClientId;
  query.expectedObjectClass = [GTLRAdExchangeSeller_UrlChannels class];
  query.loggingName = @"adexchangeseller.accounts.urlchannels.list";
  return query;
}

@end
